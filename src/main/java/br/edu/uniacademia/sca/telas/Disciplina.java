/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.uniacademia.sca.telas;

import br.edu.uniacademia.sca.arquivo.ArquivoInDisciplina;
import br.edu.uniacademia.sca.arquivo.ArquivoOutDisciplina;
import br.edu.uniacademia.sca.modelo.DisciplinaC;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jhon4
 */
public class Disciplina extends javax.swing.JFrame {

    private ArquivoInDisciplina arqInD = new ArquivoInDisciplina();
    private ArquivoOutDisciplina arqOutD = new ArquivoOutDisciplina();
    protected int linha;

    public Disciplina() {
        initComponents();
        this.setLocationRelativeTo(null);

        try {
            arqInD.abrir();
            arqOutD.abrir();
        } catch (IOException ex) {
            Logger.getLogger(Disciplina.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void Limpar() {
        txtUnidade.setText("");
        txtCurso.setText("");
        txtTitulacao.setText("");
        txtDuracao.setText("");
        txtDisciplina.setText("");
        txtCargaHoraria.setText("");
        txtCurso.setText("");
        txtCurso.requestFocus();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgSexo = new javax.swing.ButtonGroup();
        txtUnidade = new javax.swing.JTextField();
        jbAdicionar = new javax.swing.JButton();
        jbLimpar = new javax.swing.JButton();
        jlDuracao = new javax.swing.JLabel();
        jlCargaHoraria = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtDDados = new javax.swing.JTable();
        jlUnidade = new javax.swing.JLabel();
        jBAlterar = new javax.swing.JButton();
        jlTitulacao = new javax.swing.JLabel();
        jbtRemover = new javax.swing.JButton();
        jlDisciplina = new javax.swing.JLabel();
        txtDisciplina = new javax.swing.JTextField();
        jlCurso = new javax.swing.JLabel();
        txtCurso = new javax.swing.JTextField();
        txtDuracao = new javax.swing.JTextField();
        txtTitulacao = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        txtCargaHoraria = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SCA - Disciplina");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jbAdicionar.setText("Adicionar");
        jbAdicionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbAdicionarMouseClicked(evt);
            }
        });
        jbAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionarActionPerformed(evt);
            }
        });

        jbLimpar.setText("Limpar");
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });

        jlDuracao.setText("Duracao:");

        jlCargaHoraria.setText("CargaHorária:");

        jtDDados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Curso", "Disciplina", "Duração", "CargaHorária", "Titulação", "Unidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtDDados.setColumnSelectionAllowed(true);
        jtDDados.getTableHeader().setReorderingAllowed(false);
        jtDDados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtDDadosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtDDados);
        jtDDados.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jlUnidade.setText("Unidade:");

        jBAlterar.setText("Alterar");
        jBAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarActionPerformed(evt);
            }
        });

        jlTitulacao.setText("Titulação:");

        jbtRemover.setText("Remover");
        jbtRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtRemoverActionPerformed(evt);
            }
        });

        jlDisciplina.setText("Disciplina:");

        jlCurso.setText("Curso:");

        txtCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCursoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jlDisciplina)
                                        .addComponent(jlCurso, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(jlDuracao))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCurso, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                                    .addComponent(txtDisciplina)
                                    .addComponent(txtDuracao)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbAdicionar)
                                .addGap(32, 32, 32)
                                .addComponent(jbLimpar)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jlUnidade)
                                    .addComponent(jlCargaHoraria)
                                    .addComponent(jlTitulacao))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtUnidade, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                    .addComponent(txtTitulacao, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                    .addComponent(txtCargaHoraria)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jBAlterar)
                                .addGap(50, 50, 50)
                                .addComponent(jbtRemover))))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCurso)
                    .addComponent(txtCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlCargaHoraria)
                    .addComponent(txtCargaHoraria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlDisciplina)
                    .addComponent(txtDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlUnidade)
                    .addComponent(txtUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlDuracao)
                    .addComponent(txtDuracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlTitulacao)
                    .addComponent(txtTitulacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(92, 92, 92)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAdicionar)
                    .addComponent(jbLimpar)
                    .addComponent(jBAlterar)
                    .addComponent(jbtRemover))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jbAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionarActionPerformed
         //Verificação caso tenha campos vazios , não deixa concluir a operação de adcionar
        if (txtUnidade.getText().isEmpty() || txtTitulacao.getText().isEmpty() || txtCurso.getText().isEmpty() || txtCargaHoraria.getText().isEmpty()
                || txtDuracao.getText().isEmpty() || txtDisciplina.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe os campos marcados", "Informação ausente", JOptionPane.WARNING_MESSAGE);
        } else {
            DisciplinaC discip = new DisciplinaC();

            discip.setCurso(txtCurso.getText());
            discip.setUnidade(txtUnidade.getText());
            discip.setTitulacao(txtTitulacao.getText());
            discip.setDuracao(txtDuracao.getText());
            discip.setDisciplina(txtDisciplina.getText());
            discip.setCargahoraria(txtCargaHoraria.getText());

            
            DefaultTableModel modelo = (DefaultTableModel) jtDDados.getModel();

            try {
                arqOutD.Adicionar(discip);
            } catch (IOException ex) {
                Logger.getLogger(Disciplina.class.getName()).log(Level.SEVERE, null, ex);
            }

            modelo.addRow((Object[]) discip.dadosDiscip());

            Limpar();
        }
    }//GEN-LAST:event_jbAdicionarActionPerformed

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed

        this.Limpar();
        txtCurso.setEnabled(true);
    }//GEN-LAST:event_jbLimparActionPerformed

    private void jtDDadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtDDadosMouseClicked

        linha = jtDDados.getSelectedRow();

        txtCurso.setText(jtDDados.getValueAt(linha, 0).toString());
        txtDisciplina.setText(jtDDados.getValueAt(linha, 1).toString());
        txtDuracao.setText(jtDDados.getValueAt(linha, 2).toString());
        txtCargaHoraria.setText(jtDDados.getValueAt(linha, 3).toString());
        txtTitulacao.setText(jtDDados.getValueAt(linha, 4).toString());
        txtUnidade.setText(jtDDados.getValueAt(linha, 5).toString());

    }//GEN-LAST:event_jtDDadosMouseClicked

    private void jBAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarActionPerformed

        ArrayList<DisciplinaC> listab = new ArrayList<DisciplinaC>();
        listab = (ArrayList<DisciplinaC>) arqInD.getTodos();

        DisciplinaC discip = new DisciplinaC();

        discip.setCurso(txtCurso.getText());
        discip.setUnidade(txtUnidade.getText());
        discip.setTitulacao(txtTitulacao.getText());
        discip.setDuracao(txtDuracao.getText());
        discip.setDisciplina(txtDisciplina.getText());
        discip.setCargahoraria(txtCargaHoraria.getText());

        listab.get(linha).setCurso(discip.getCurso());
        listab.get(linha).setUnidade(discip.getUnidade());
        listab.get(linha).setTitulacao(discip.getTitulacao());
        listab.get(linha).setDuracao(discip.getDuracao());
        listab.get(linha).setDisciplina(discip.getDisciplina());
        listab.get(linha).setCargahoraria(discip.getCargahoraria());

        try {
            arqOutD.recadastrar_todos(listab);
        } catch (IOException ex) {
            Logger.getLogger(DisciplinaC.class.getName()).log(Level.SEVERE, null, ex);
        }

        JOptionPane.showMessageDialog(null, "Valor alterado com sucesso!");

        Limpar();
        txtCurso.setEnabled(true);

        DefaultTableModel modelo = (DefaultTableModel) jtDDados.getModel();

        if (jtDDados.getRowCount() > 0) {
            for (int i = jtDDados.getRowCount() - 1; i >= 0; i--) {
                modelo.removeRow(i);
            }
        }

        List<DisciplinaC> listat2 = new ArrayList<DisciplinaC>();
        listat2 = arqInD.getTodos();

        for (int i = 0; i < listat2.size(); i++) {
            modelo.addRow((Object[]) listat2.get(i).dadosDiscip());

        }
    }//GEN-LAST:event_jBAlterarActionPerformed

    private void jbtRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtRemoverActionPerformed

        DefaultTableModel modelo = (DefaultTableModel) jtDDados.getModel();
        List<DisciplinaC> list = new ArrayList<DisciplinaC>();
        ArrayList<DisciplinaC> nova_list = new ArrayList<DisciplinaC>();
        linha = jtDDados.getSelectedRow();
        Object nome = modelo.getValueAt(linha, 0);
        list = arqInD.getTodos();

        for (int i = 0; i < list.size(); i++) {
            if (!(list.get(i).getCurso().equals(txtCurso.getText()))) {
                nova_list.add(list.get(i));
            }
        }
        try {
            arqOutD.recadastrar_todos(nova_list);
        } catch (IOException ex) {
            Logger.getLogger(Disciplina.class.getName()).log(Level.SEVERE, null, ex);
        }

        Limpar();
        modelo.removeRow(linha);
        txtCurso.setEnabled(true);
        JOptionPane.showMessageDialog(null, "Registro apagado com sucesso");

    }//GEN-LAST:event_jbtRemoverActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        List<DisciplinaC> lista = new ArrayList<DisciplinaC>();

        lista = arqInD.getTodos();
        DefaultTableModel modelo = (DefaultTableModel) jtDDados.getModel();

        for (int i = jtDDados.getRowCount() - 1; i >= 0; --i) {
            modelo.removeRow(i);
        }

        for (int i = 0; i < lista.size(); i++) {
            modelo.addRow((Object[]) lista.get(i).dadosDiscip());
        }
    }//GEN-LAST:event_formWindowOpened

    private void jbAdicionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbAdicionarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jbAdicionarMouseClicked

    private void txtCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCursoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCursoActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        Principal p = new Principal();
        p.setVisible(true);
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Disciplina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Disciplina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Disciplina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Disciplina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Disciplina().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgSexo;
    private javax.swing.JButton jBAlterar;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbAdicionar;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JButton jbtRemover;
    private javax.swing.JLabel jlCargaHoraria;
    private javax.swing.JLabel jlCurso;
    private javax.swing.JLabel jlDisciplina;
    private javax.swing.JLabel jlDuracao;
    private javax.swing.JLabel jlTitulacao;
    private javax.swing.JLabel jlUnidade;
    private javax.swing.JTable jtDDados;
    private javax.swing.JTextField txtCargaHoraria;
    private javax.swing.JTextField txtCurso;
    private javax.swing.JTextField txtDisciplina;
    private javax.swing.JTextField txtDuracao;
    private javax.swing.JTextField txtTitulacao;
    private javax.swing.JTextField txtUnidade;
    // End of variables declaration//GEN-END:variables

}
