/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.uniacademia.sca.telas;

import br.edu.uniacademia.sca.arquivo.ArquivoInDocente;
import br.edu.uniacademia.sca.arquivo.ArquivoOutDocente;
import br.edu.uniacademia.sca.modelo.Docente;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jhon4
 */
public class Professor extends javax.swing.JFrame {

    private ArquivoInDocente arqIn = new ArquivoInDocente();
    private ArquivoOutDocente arqOut = new ArquivoOutDocente();
    protected int linha;

    /**
     * Creates new form Professor
     */
    public Professor() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        //Abrindo componente para a leitura dos dados;
        try {
            arqIn.abrir();
            arqOut.abrir();
        } catch (IOException ex) {
            Logger.getLogger(Professor.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void Limpar() {
        txtBairro.setText("");
        txtCEP.setText("");
        txtCPF.setText("");
        txtCidade.setText("");
        txtComplemento.setText("");
        txtDataNasc.setText("");
        txtLogradouro.setText("");
        txtNome.setText("");
        txtNumero.setText("");
        txtRG.setText("");
        jckbEstatus.setSelected(false);
        jcbEstado.setSelectedIndex(-1);
        jcbTitulacao.setSelectedIndex(-1);
        bgSexo.clearSelection();
        txtCPF.requestFocus();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        bgSexo = new javax.swing.ButtonGroup();
        jlNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jlCPF = new javax.swing.JLabel();
        jlRG = new javax.swing.JLabel();
        jlDataNasc = new javax.swing.JLabel();
        txtRG = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jcbTitulacao = new javax.swing.JComboBox<>();
        jrbSexoM = new javax.swing.JRadioButton();
        jrbSexoF = new javax.swing.JRadioButton();
        txtLogradouro = new javax.swing.JTextField();
        txtComplemento = new javax.swing.JTextField();
        txtBairro = new javax.swing.JTextField();
        txtCidade = new javax.swing.JTextField();
        jcbEstado = new javax.swing.JComboBox<>();
        jckbEstatus = new javax.swing.JCheckBox();
        jlAtivo = new javax.swing.JLabel();
        jbAdicionar = new javax.swing.JButton();
        jbLimpar = new javax.swing.JButton();
        txtCPF = new javax.swing.JFormattedTextField();
        txtDataNasc = new javax.swing.JFormattedTextField();
        txtCEP = new javax.swing.JFormattedTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtDados = new javax.swing.JTable();
        jBAlterar = new javax.swing.JButton();
        jbtRemover = new javax.swing.JButton();
        txtNumero = new javax.swing.JTextField();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SCA - Professor");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jlNome.setText("Nome:");

        jlCPF.setText("CPF:");

        jlRG.setText("RG:");

        jlDataNasc.setText("Data Nasc.:");

        jLabel1.setText("Sexo:");

        jLabel2.setText("Titulação:");

        jLabel3.setText("Logradouro:");

        jLabel4.setText("Número:");

        jLabel5.setText("Cidade:");

        jLabel6.setText("Complemento:");

        jLabel7.setText("Bairro:");

        jLabel8.setText("Estado:");

        jLabel9.setText("CEP:");

        jcbTitulacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Doutorado", "Mestrado", "Espacialização" }));
        jcbTitulacao.setSelectedIndex(-1);
        jcbTitulacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTitulacaoActionPerformed(evt);
            }
        });

        bgSexo.add(jrbSexoM);
        jrbSexoM.setText("M");

        bgSexo.add(jrbSexoF);
        jrbSexoF.setText("F");

        jcbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));
        jcbEstado.setSelectedIndex(-1);

        jckbEstatus.setText("Ativo");

        jlAtivo.setText("Estatus:");

        jbAdicionar.setText("Adicionar");
        jbAdicionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbAdicionarMouseClicked(evt);
            }
        });
        jbAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionarActionPerformed(evt);
            }
        });

        jbLimpar.setText("Limpar");
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });

        try {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtDataNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtCEP.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jtDados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CPF", "RG", "Nome", "Data Nasc.", "Sexo", "Titulação", "CEP", "Logradouro", "Número", "Complemento", "Bairro", "Cidade", "Estado", "Estatus"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtDados.setColumnSelectionAllowed(true);
        jtDados.getTableHeader().setReorderingAllowed(false);
        jtDados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtDadosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtDados);
        jtDados.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jBAlterar.setText("Alterar");
        jBAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarActionPerformed(evt);
            }
        });

        jbtRemover.setText("Remover");
        jbtRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtRemoverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 779, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jlAtivo)
                                        .addGap(18, 18, 18)
                                        .addComponent(jckbEstatus))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(59, 59, 59)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jlRG)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtRG, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(16, 16, 16)
                                                .addComponent(jLabel3)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtLogradouro)))
                                        .addGap(4, 4, 4)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(24, 24, 24)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(10, 10, 10))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel9)
                                                .addComponent(jLabel4)
                                                .addComponent(jlNome)
                                                .addComponent(jlCPF))
                                            .addGap(26, 26, 26)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jcbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(147, 147, 147))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jbLimpar)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jBAlterar)
                                            .addGap(85, 85, 85))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(txtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel7)
                                            .addGap(32, 32, 32)
                                            .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(jbAdicionar)))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jlDataNasc)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jrbSexoM)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jrbSexoF))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(11, 11, 11)
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jcbTitulacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbtRemover)
                                .addGap(153, 153, 153)))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCPF)
                    .addComponent(jlRG)
                    .addComponent(txtRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlDataNasc)
                    .addComponent(txtDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlNome)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jrbSexoM)
                    .addComponent(jrbSexoF))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbTitulacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(txtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jcbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlAtivo)
                    .addComponent(jckbEstatus))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAdicionar)
                    .addComponent(jbLimpar)
                    .addComponent(jBAlterar)
                    .addComponent(jbtRemover))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

        Principal p = new Principal();
        p.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_formWindowClosing

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed
        //Lipmeza de todos os campos , recebe a função limpar que foi criada;
        this.Limpar();
        
        txtCPF.setEnabled(true);

    }//GEN-LAST:event_jbLimparActionPerformed

    private void jbAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionarActionPerformed
        //Verificação se todos os campos estão completos ;
        if (txtBairro.getText().isEmpty() || txtCEP.getText().isEmpty() || txtCPF.getText().isEmpty() || txtCidade.getText().isEmpty()
                || txtDataNasc.getText().isEmpty() || txtLogradouro.getText().isEmpty() || txtNome.getText().isEmpty() || txtRG.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe os campos marcados", "Informação ausente", JOptionPane.WARNING_MESSAGE);
        } else {
        // Instanciando a classe docente;
            Docente doc = new Docente();
        //Capturando texto de cada campo informado;
            doc.setCpf(txtCPF.getText());
            doc.setRg(txtRG.getText());
            doc.setBairro(txtBairro.getText());
            doc.setCep(txtCEP.getText());
            doc.setCidade(txtCidade.getText());
            doc.setComplemento(txtComplemento.getText());
            doc.setDataNasc(txtDataNasc.getText());
            doc.setEstado(jcbEstado.getSelectedItem().toString());
            doc.setLogradouro(txtLogradouro.getText());
            doc.setNome(txtNome.getText());
            doc.setNumero(txtNumero.getText());
            if (jrbSexoM.isSelected()) {
                doc.setSexo("Masculino");
            } else if (jrbSexoF.isSelected()) {
                doc.setSexo("Feminino");
            } else {
                JOptionPane.showMessageDialog(null, "Informe o sexo do professor(a).", "Informação ausente", JOptionPane.WARNING_MESSAGE);
            }
            if (jckbEstatus.isSelected()) {
                doc.setSituacao("Ativo");
            } else {
                doc.setSituacao("Inativo");
            }
            doc.setTitulacao(jcbTitulacao.getSelectedItem().toString());
            
        //Função que define qual modelo de tabela para ser adicionado os valores na tabela
            DefaultTableModel modelo = (DefaultTableModel) jtDados.getModel();

            try {
                arqOut.Adicionar(doc);
            } catch (IOException ex) {
                Logger.getLogger(Professor.class.getName()).log(Level.SEVERE, null, ex);
            }
            
           
             modelo.addRow((Object[]) doc.dadosProf());

            Limpar();
        }

    }//GEN-LAST:event_jbAdicionarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //Recupera os arquivos salvos e grava dentro da jtable;
        
        List<Docente> lista = new ArrayList<Docente>();

        lista = arqIn.getTodos();
        DefaultTableModel modelo = (DefaultTableModel) jtDados.getModel();

        for (int i = jtDados.getRowCount() - 1; i >= 0; --i) {
            modelo.removeRow(i);
        }

        for (int i = 0; i < lista.size(); i++) {
            modelo.addRow((Object[]) lista.get(i).dadosProf());
        }


    }//GEN-LAST:event_formWindowOpened

    private void jbtRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtRemoverActionPerformed
        //JB remover , manipulando os dados que serao removidos da talela
        DefaultTableModel modelo = (DefaultTableModel) jtDados.getModel();
        List<Docente> list = new ArrayList<Docente>();
        ArrayList<Docente> nova_list = new ArrayList<Docente>();
        //Recupera os dados da linha que foi selecionada pelo usuário;(variável protected);
        linha = jtDados.getSelectedRow();
        Object nome = modelo.getValueAt(linha, 0);
        list = arqIn.getTodos();
        //Procura a lista que tem as informações a serem removidas
        for (int i = 0; i < list.size(); i++) {
            if (!(list.get(i).getCpf().equals(txtCPF.getText()))) {
                nova_list.add(list.get(i));
            }
        }
        try {
            arqOut.recadastrar_todos(nova_list);
        } catch (IOException ex) {
            Logger.getLogger(Professor.class.getName()).log(Level.SEVERE, null, ex);
        }
        Limpar();
        modelo.removeRow(linha);
        txtCPF.setEnabled(true);
        JOptionPane.showMessageDialog(null, "Registro apagado com sucesso");


    }//GEN-LAST:event_jbtRemoverActionPerformed

    private void jtDadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtDadosMouseClicked
        
        linha = jtDados.getSelectedRow();
        
        txtCPF.setText(jtDados.getValueAt(linha, 0).toString());
        txtCPF.setEnabled(false);
        txtRG.setText(jtDados.getValueAt(linha, 1).toString());
        txtNome.setText(jtDados.getValueAt(linha, 2).toString());
        txtDataNasc.setText(jtDados.getValueAt(linha, 3).toString());
        if (jtDados.getValueAt(linha, 4).toString().equalsIgnoreCase("Masculino")) {
            jrbSexoM.setSelected(true);
        } else {
            jrbSexoF.setSelected(true);
        }

        String titulacao = jtDados.getValueAt(linha, 5).toString();

        switch (titulacao) {
            case "Doutorado":
                jcbTitulacao.setSelectedIndex(0);
                break;
            case "Mestrado":
                jcbTitulacao.setSelectedIndex(1);
                break;
            case "Espacialização":
                jcbTitulacao.setSelectedIndex(2);
                break;
            default:
                jcbTitulacao.setSelectedIndex(-1);
        }

        txtCEP.setText(jtDados.getValueAt(linha, 6).toString());
        txtLogradouro.setText(jtDados.getValueAt(linha, 7).toString());
        txtNumero.setText(jtDados.getValueAt(linha, 8).toString());
        txtComplemento.setText(jtDados.getValueAt(linha, 9).toString());
        txtBairro.setText(jtDados.getValueAt(linha, 10).toString());
        txtCidade.setText(jtDados.getValueAt(linha, 11).toString());

        String estado = jtDados.getValueAt(linha, 12).toString();

        switch (estado) {
            case "AC":
                jcbEstado.setSelectedIndex(0);
                break;
            case "AL":
                jcbEstado.setSelectedIndex(1);
                break;
            case "AP":
                jcbEstado.setSelectedIndex(2);
                break;
            case "AM":
                jcbEstado.setSelectedIndex(3);
                break;
            case "BA":
                jcbEstado.setSelectedIndex(4);
                break;
            case "CE":
                jcbEstado.setSelectedIndex(5);
                break;
            case "DF":
                jcbEstado.setSelectedIndex(6);
                break;
            case "ES":
                jcbEstado.setSelectedIndex(7);
                break;
            case "GO":
                jcbEstado.setSelectedIndex(8);
                break;
            case "MA":
                jcbEstado.setSelectedIndex(9);
                break;
            case "MT":
                jcbEstado.setSelectedIndex(10);
                break;
            case "MS":
                jcbEstado.setSelectedIndex(11);
                break;
            case "MG":
                jcbEstado.setSelectedIndex(12);
                break;
            case "PA":
                jcbEstado.setSelectedIndex(13);
                break;
            case "PB":
                jcbEstado.setSelectedIndex(14);
                break;
            case "PR":
                jcbEstado.setSelectedIndex(15);
                break;
            case "PE":
                jcbEstado.setSelectedIndex(16);
                break;
            case "PI":
                jcbEstado.setSelectedIndex(17);
                break;
            case "RJ":
                jcbEstado.setSelectedIndex(18);
                break;
            case "RN":
                jcbEstado.setSelectedIndex(19);
                break;
            case "RS":
                jcbEstado.setSelectedIndex(20);
                break;
            case "RO":
                jcbEstado.setSelectedIndex(21);
                break;
            case "RR":
                jcbEstado.setSelectedIndex(22);
                break;
            case "SC":
                jcbEstado.setSelectedIndex(23);
                break;
            case "SP":
                jcbEstado.setSelectedIndex(24);
                break;
            case "SE":
                jcbEstado.setSelectedIndex(25);
                break;
            case "TO":
                jcbEstado.setSelectedIndex(26);
                break;
            default:
                jcbTitulacao.setSelectedIndex(-1);
        }

        if (jtDados.getValueAt(linha, 13).toString().equalsIgnoreCase("Ativo")) {
            jckbEstatus.setSelected(true);
        }

    }//GEN-LAST:event_jtDadosMouseClicked

    private void jBAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarActionPerformed

        ArrayList<Docente> listat = new ArrayList<Docente>();
        listat = (ArrayList<Docente>) arqIn.getTodos();

        Docente doc = new Docente();

        doc.setCpf(txtCPF.getText());
        doc.setRg(txtRG.getText());
        doc.setBairro(txtBairro.getText());
        doc.setCep(txtCEP.getText());
        doc.setCidade(txtCidade.getText());
        doc.setComplemento(txtComplemento.getText());
        doc.setDataNasc(txtDataNasc.getText());
        doc.setEstado(jcbEstado.getSelectedItem().toString());
        doc.setLogradouro(txtLogradouro.getText());
        doc.setNome(txtNome.getText());
        doc.setNumero(txtNumero.getText());
        if (jrbSexoM.isSelected()) {
            doc.setSexo("Masculino");
        } else if (jrbSexoF.isSelected()) {
            doc.setSexo("Feminino");
        } else {
            JOptionPane.showMessageDialog(null, "Informe o sexo do professor(a).", "Informação ausente", JOptionPane.WARNING_MESSAGE);
        }
        if (jckbEstatus.isSelected()) {
            doc.setSituacao("Ativo");
        } else {
            doc.setSituacao("Inativo");
        }
        doc.setTitulacao(jcbTitulacao.getSelectedItem().toString());

        //Pega todos os campos da interface , e cria uma lista com esses campos informando qual linha esta sendo substituida na tabela
        listat.get(linha).setCpf(doc.getCpf());
        listat.get(linha).setRg(doc.getRg());
        listat.get(linha).setBairro(doc.getBairro());
        listat.get(linha).setCep(doc.getCep());
        listat.get(linha).setCidade(doc.getCidade());
        listat.get(linha).setComplemento(doc.getComplemento());
        listat.get(linha).setDataNasc(doc.getDataNasc());
        listat.get(linha).setEstado(doc.getEstado());
        listat.get(linha).setLogradouro(doc.getLogradouro());
        listat.get(linha).setNome(doc.getNome());
        listat.get(linha).setNumero(doc.getNumero());
        listat.get(linha).setSexo(doc.getSexo());
        listat.get(linha).setSituacao(doc.getSituacao());

        try {
            arqOut.recadastrar_todos(listat);
        } catch (IOException ex) {
            Logger.getLogger(Professor.class.getName()).log(Level.SEVERE, null, ex);
        }

        JOptionPane.showMessageDialog(null, "Valor alterado com sucesso!");

        Limpar();
        txtCPF.setEnabled(true);

        DefaultTableModel modelo = (DefaultTableModel) jtDados.getModel();

        if (jtDados.getRowCount() > 0) {
            for (int i = jtDados.getRowCount() - 1; i >= 0; i--) {
                modelo.removeRow(i);
            }
        }
        
        List<Docente> listat2 = new ArrayList<Docente>();
        listat2 = arqIn.getTodos();

        for (int i = 0; i < listat2.size(); i++) {
            modelo.addRow((Object[]) listat2.get(i).dadosProf());
        }

    }//GEN-LAST:event_jBAlterarActionPerformed

    private void jcbTitulacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTitulacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbTitulacaoActionPerformed

    private void jbAdicionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbAdicionarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jbAdicionarMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Professor.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Professor.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Professor.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Professor.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Professor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgSexo;
    private javax.swing.JButton jBAlterar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton jbAdicionar;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JButton jbtRemover;
    private javax.swing.JComboBox<String> jcbEstado;
    private javax.swing.JComboBox<String> jcbTitulacao;
    private javax.swing.JCheckBox jckbEstatus;
    private javax.swing.JLabel jlAtivo;
    private javax.swing.JLabel jlCPF;
    private javax.swing.JLabel jlDataNasc;
    private javax.swing.JLabel jlNome;
    private javax.swing.JLabel jlRG;
    private javax.swing.JRadioButton jrbSexoF;
    private javax.swing.JRadioButton jrbSexoM;
    private javax.swing.JTable jtDados;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JFormattedTextField txtCEP;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtComplemento;
    private javax.swing.JFormattedTextField txtDataNasc;
    private javax.swing.JTextField txtLogradouro;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtRG;
    // End of variables declaration//GEN-END:variables
}
