/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.uniacademia.sca.telas;

import br.edu.uniacademia.sca.arquivo.ArquivoInDiscente;
import br.edu.uniacademia.sca.arquivo.ArquivoInDisciplina;
import br.edu.uniacademia.sca.arquivo.ArquivoInDocente;
import br.edu.uniacademia.sca.arquivo.ArquivoInTurma;
import br.edu.uniacademia.sca.arquivo.ArquivoOutDiscente;
import br.edu.uniacademia.sca.arquivo.ArquivoOutDisciplina;
import br.edu.uniacademia.sca.arquivo.ArquivoOutDocente;
import br.edu.uniacademia.sca.arquivo.ArquivoOutTurma;
import br.edu.uniacademia.sca.modelo.Discente;
import br.edu.uniacademia.sca.modelo.DisciplinaC;
import br.edu.uniacademia.sca.modelo.Docente;
import br.edu.uniacademia.sca.modelo.Turma;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jhon4
 */
public class Controle extends javax.swing.JFrame {

    private ArquivoInDocente arqIn = new ArquivoInDocente();
    private ArquivoOutDocente arqOut = new ArquivoOutDocente();
    private ArquivoInDiscente arqInD = new ArquivoInDiscente();
    private ArquivoOutDiscente arqOutD = new ArquivoOutDiscente();
    private ArquivoInDisciplina arqInDi = new ArquivoInDisciplina();
    private ArquivoOutDisciplina arqOutDi = new ArquivoOutDisciplina();
    private ArquivoInTurma arqInT = new ArquivoInTurma();
    private ArquivoOutTurma arqOutT = new ArquivoOutTurma();
    protected int linha;

    public Controle() {
        initComponents();
        this.setLocationRelativeTo(null);

        try {
            arqIn.abrir();
            arqOut.abrir();
        } catch (IOException ex) {
            Logger.getLogger(Professor.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            arqInD.abrir();
            arqOutD.abrir();
        } catch (IOException ex) {
            Logger.getLogger(Aluno.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            arqInDi.abrir();
            arqOutDi.abrir();
        } catch (IOException ex) {
            Logger.getLogger(Disciplina.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            arqInT.abrir();
            arqOutT.abrir();
        } catch (IOException ex) {
            Logger.getLogger(Turma.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void Limpar() {
        txtTurma.setText("");
        txtHorario.setText("");
        txtProfessor.setText("");
        txtAluno.setText("");
        txtCurso.setText("");
        txtDisciplina.setText("");
        txtTurma.requestFocus();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLTurma = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTurma = new javax.swing.JTextField();
        jbAdicionarProf = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtPDados = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtALUNDados = new javax.swing.JTable();
        jlProfessor = new javax.swing.JLabel();
        txtProfessor = new javax.swing.JTextField();
        txtAluno = new javax.swing.JTextField();
        jbAtualizar = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jtTurma = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jtDisciplina = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtCurso = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDisciplina = new javax.swing.JTextField();
        txtHorario = new javax.swing.JFormattedTextField();
        jbLimpar = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbRemover = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SCA - Controle");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLTurma.setText("Turma:");

        jLabel3.setText("Horário:");

        jLabel4.setText("Aluno:");

        txtTurma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTurmaActionPerformed(evt);
            }
        });

        jbAdicionarProf.setText("Adicionar");
        jbAdicionarProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionarProfActionPerformed(evt);
            }
        });

        jtPDados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Professor", "Titulacao"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtPDados.setColumnSelectionAllowed(true);
        jtPDados.getTableHeader().setReorderingAllowed(false);
        jtPDados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtPDadosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtPDados);

        jtALUNDados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Matrícula", "Nome", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtALUNDados.setColumnSelectionAllowed(true);
        jtALUNDados.getTableHeader().setReorderingAllowed(false);
        jtALUNDados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtALUNDadosMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jtALUNDados);

        jlProfessor.setText("Professor:");

        txtProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProfessorActionPerformed(evt);
            }
        });

        jbAtualizar.setText("Atualizar");
        jbAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAtualizarActionPerformed(evt);
            }
        });

        jtTurma.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Turma", "Horário", "Aluno", "Curso", "Disciplina", "Professor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtTurma.setColumnSelectionAllowed(true);
        jtTurma.getTableHeader().setReorderingAllowed(false);
        jtTurma.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtTurmaMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jtTurma);

        jtDisciplina.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Curso", "Disciplina"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtDisciplina.setColumnSelectionAllowed(true);
        jtDisciplina.getTableHeader().setReorderingAllowed(false);
        jtDisciplina.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtDisciplinaMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jtDisciplina);

        jLabel1.setText("Curso:");

        txtCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCursoActionPerformed(evt);
            }
        });

        jLabel2.setText("Disciplina:");

        txtHorario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));

        jbLimpar.setText("Limpar");
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });

        jbAlterar.setText("Alterar");
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbRemover.setText("Remover");
        jbRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlProfessor)
                            .addComponent(jLTurma))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtProfessor)
                            .addComponent(txtTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(txtCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbAdicionarProf, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                    .addComponent(jbAtualizar, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                    .addComponent(jbLimpar, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                    .addComponent(jbAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                    .addComponent(jbRemover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLTurma)
                                    .addComponent(txtTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jlProfessor)
                                    .addComponent(txtProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jbAtualizar)
                                        .addGap(18, 18, 18)
                                        .addComponent(jbAdicionarProf)))
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel4)
                                            .addComponent(txtAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jbLimpar)
                                        .addGap(18, 18, 18)
                                        .addComponent(jbAlterar)
                                        .addGap(18, 18, 18)
                                        .addComponent(jbRemover)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(txtDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(68, 68, 68))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
    }//GEN-LAST:event_formWindowClosing

    private void txtTurmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTurmaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTurmaActionPerformed

    private void jbAdicionarProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionarProfActionPerformed
        if (txtTurma.getText().isEmpty() || txtHorario.getText().isEmpty() || txtProfessor.getText().isEmpty() || txtAluno.getText().isEmpty()
                || txtCurso.getText().isEmpty() || txtDisciplina.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe os campos marcados", "Informação ausente", JOptionPane.WARNING_MESSAGE);

        } else {
            Turma tur = new Turma();
            tur.setCodigo(txtTurma.getText());
            tur.setHorario(txtHorario.getText());
            tur.setAluno(txtAluno.getText());
            tur.setCurso(txtCurso.getText());
            tur.setDisciplina(txtDisciplina.getText());
            tur.setProfessor(txtProfessor.getText());

            DefaultTableModel modelo = (DefaultTableModel) jtTurma.getModel();

            try {
                arqOutT.Adicionar(tur);
            } catch (IOException ex) {
                Logger.getLogger(Turma.class.getName()).log(Level.SEVERE, null, ex);
            }

            modelo.addRow((Object[]) tur.dadosTurma());

        }
    }//GEN-LAST:event_jbAdicionarProfActionPerformed

    private void jtPDadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtPDadosMouseClicked
        linha = jtPDados.getSelectedRow();

        txtProfessor.setText(jtPDados.getValueAt(linha, 0).toString());
        txtProfessor.setEnabled(false);

    }//GEN-LAST:event_jtPDadosMouseClicked

    private void jtALUNDadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtALUNDadosMouseClicked
        linha = jtALUNDados.getSelectedRow();

        txtAluno.setText(jtALUNDados.getValueAt(linha, 1).toString());
        txtAluno.setEnabled(false);
    }//GEN-LAST:event_jtALUNDadosMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        Principal p = new Principal();
        p.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_formWindowClosed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        List<Turma> lista = new ArrayList<Turma>();

        lista = arqInT.getTodos();
        DefaultTableModel modelo = (DefaultTableModel) jtTurma.getModel();

        for (int i = jtTurma.getRowCount() - 1; i >= 0; --i) {
            modelo.removeRow(i);
        }

        for (int i = 0; i < lista.size(); i++) {
            modelo.addRow((Object[]) lista.get(i).dadosTurma());
        }


    }//GEN-LAST:event_formWindowOpened

    private void txtProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProfessorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProfessorActionPerformed

    private void jbAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAtualizarActionPerformed
        List<Discente> listab = new ArrayList<Discente>();

        listab = arqInD.getTodos();
        DefaultTableModel modelo = (DefaultTableModel) jtALUNDados.getModel();

        for (int i = jtALUNDados.getRowCount() - 1; i >= 0; --i) {
            modelo.removeRow(i);
        }

        for (int i = 0; i < listab.size(); i++) {
            modelo.addRow((Object[]) listab.get(i).dadosAlunNome());
        }

        List<Docente> lista = new ArrayList<Docente>();

        lista = arqIn.getTodos();
        DefaultTableModel modelob = (DefaultTableModel) jtPDados.getModel();

        for (int i = jtPDados.getRowCount() - 1; i >= 0; --i) {
            modelob.removeRow(i);
        }

        for (int i = 0; i < lista.size(); i++) {
            modelob.addRow((Object[]) lista.get(i).dadosProfNome());
        }

        List<DisciplinaC> listac = new ArrayList<DisciplinaC>();

        listac = arqInDi.getTodos();
        DefaultTableModel modeloc = (DefaultTableModel) jtDisciplina.getModel();

        for (int i = jtDisciplina.getRowCount() - 1; i >= 0; --i) {
            modeloc.removeRow(i);
        }

        for (int i = 0; i < listac.size(); i++) {
            modeloc.addRow((Object[]) listac.get(i).dadosDiscip());
        }


    }//GEN-LAST:event_jbAtualizarActionPerformed

    private void jtTurmaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtTurmaMouseClicked
        linha = jtTurma.getSelectedRow();

        txtTurma.setText(jtTurma.getValueAt(linha, 0).toString());
        txtHorario.setText(jtTurma.getValueAt(linha, 1).toString());
        txtAluno.setText(jtTurma.getValueAt(linha, 2).toString());
        txtAluno.setEnabled(false);
        txtCurso.setText(jtTurma.getValueAt(linha, 3).toString());
        txtCurso.setEnabled(false);
        txtDisciplina.setText(jtTurma.getValueAt(linha, 4).toString());
        txtDisciplina.setEnabled(false);
        txtProfessor.setText(jtTurma.getValueAt(linha, 5).toString());
        txtProfessor.setEnabled(false);


    }//GEN-LAST:event_jtTurmaMouseClicked

    private void jtDisciplinaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtDisciplinaMouseClicked
        linha = jtDisciplina.getSelectedRow();

        txtCurso.setText(jtDisciplina.getValueAt(linha, 0).toString());
        txtCurso.setEnabled(false);
        txtDisciplina.setText(jtDisciplina.getValueAt(linha, 1).toString());
        txtDisciplina.setEnabled(false);
    }//GEN-LAST:event_jtDisciplinaMouseClicked

    private void txtCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCursoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCursoActionPerformed

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed

        this.Limpar();
    }//GEN-LAST:event_jbLimparActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
        ArrayList<Turma> lista = new ArrayList<Turma>();
        lista = (ArrayList<Turma>) arqInT.getTodos();

        Turma tur = new Turma();

        tur.setCodigo(txtTurma.getText());
        tur.setHorario(txtHorario.getText());
        tur.setProfessor(txtProfessor.getText());
        tur.setAluno(txtAluno.getText());
        tur.setCurso(txtCurso.getText());
        tur.setDisciplina(txtDisciplina.getText());
        

        lista.get(linha).setCodigo(tur.getCodigo());
        lista.get(linha).setHorario(tur.getHorario());
        lista.get(linha).setProfessor(tur.getProfessor());
        lista.get(linha).setAluno(tur.getAluno());
        lista.get(linha).setCurso(tur.getCurso());
        lista.get(linha).setDisciplina(tur.getDisciplina());

        try {
            arqOutT.recadastrar_todos(lista);
        } catch (IOException ex) {
            Logger.getLogger(Turma.class.getName()).log(Level.SEVERE, null, ex);
        }

        JOptionPane.showMessageDialog(null, "Valor alterado com sucesso!");

        Limpar();
      

        DefaultTableModel modelo = (DefaultTableModel) jtTurma.getModel();

        if (jtTurma.getRowCount() > 0) {
            for (int i = jtTurma.getRowCount() - 1; i >= 0; i--) {
                modelo.removeRow(i);
            }
        }

        List<Turma> listat3 = new ArrayList<Turma>();
        listat3 = arqInT.getTodos();

        for (int i = 0; i < listat3.size(); i++) {
            modelo.addRow((Object[]) listat3.get(i).dadosTurma());

        }
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoverActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jtTurma.getModel();
        List<Turma> list = new ArrayList<Turma>();
        ArrayList<Turma> nova_list = new ArrayList<Turma>();
        linha = jtTurma.getSelectedRow();
        Object nome = modelo.getValueAt(linha, 0);
        list = arqInT.getTodos();

        for (int i = 0; i < list.size(); i++) {
            if (!(list.get(i).getCodigo().equals(txtTurma.getText()))) {
                nova_list.add(list.get(i));
            }
        }
        try {
            arqOutT.recadastrar_todos(nova_list);
        } catch (IOException ex) {
            Logger.getLogger(Turma.class.getName()).log(Level.SEVERE, null, ex);
        }

        Limpar();
        modelo.removeRow(linha);
        txtTurma.setEnabled(true);
        JOptionPane.showMessageDialog(null, "Registro apagado com sucesso");
        
    }//GEN-LAST:event_jbRemoverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Controle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Controle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Controle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Controle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Controle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLTurma;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JButton jbAdicionarProf;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbAtualizar;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JButton jbRemover;
    private javax.swing.JLabel jlProfessor;
    private javax.swing.JTable jtALUNDados;
    private javax.swing.JTable jtDisciplina;
    private javax.swing.JTable jtPDados;
    private javax.swing.JTable jtTurma;
    private javax.swing.JTextField txtAluno;
    private javax.swing.JTextField txtCurso;
    private javax.swing.JTextField txtDisciplina;
    private javax.swing.JFormattedTextField txtHorario;
    private javax.swing.JTextField txtProfessor;
    private javax.swing.JTextField txtTurma;
    // End of variables declaration//GEN-END:variables
}
